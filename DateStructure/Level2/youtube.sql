-- MySQL Script generated by MySQL Workbench
-- Mon Feb 28 12:01:42 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`usuarios` (
  `id_usuarios` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `fecha_nacimiento` DATE NULL,
  `pais` VARCHAR(45) NULL,
  `cp` VARCHAR(10) NULL,
  PRIMARY KEY (`id_usuarios`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`videos` (
  `id_videos` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `fecha_publicacion` DATETIME NULL,
  `estado` ENUM("publico", "privado", "oculto") NULL,
  `descripcion` VARCHAR(200) NULL,
  `thumbnail` VARCHAR(45) NULL,
  `tamayno_MB` INT NULL,
  `num_reproducciones` INT NULL,
  `num_likes` INT NULL,
  `num_dislikes` INT NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id_videos`),
  INDEX `fk_videos_usuarios_idx` (`usuarios_id` ASC) ,
  CONSTRAINT `fk_videos_usuarios`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`etiqueta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`etiqueta` (
  `id_etiqueta` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NULL,
  PRIMARY KEY (`id_etiqueta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video_etiqueta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`video_etiqueta` (
  `videos_id` INT NOT NULL,
  `etiqueta_id` INT NOT NULL,
  INDEX `fk_video_etiqueta_videos1_idx` (`videos_id` ASC) ,
  INDEX `fk_video_etiqueta_etiqueta1_idx` (`etiqueta_id` ASC) ,
  PRIMARY KEY (`videos_id`, `etiqueta_id`),
  CONSTRAINT `fk_video_etiqueta_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id_videos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_etiqueta_etiqueta1`
    FOREIGN KEY (`etiqueta_id`)
    REFERENCES `youtube`.`etiqueta` (`id_etiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlists` (
  `id_playlists` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `fecha_creacion` DATE NULL,
  `estado` ENUM("publica", "privada") NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id_playlists`),
  INDEX `fk_playlists_usuarios1_idx` (`usuarios_id` ASC) ,
  CONSTRAINT `fk_playlists_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`videos_en_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`videos_en_playlist` (
  `playlists_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`playlists_id`, `videos_id`),
  INDEX `fk_playlists_videos_videos1_idx` (`videos_id` ASC) ,
  CONSTRAINT `fk_playlists_videos_playlists1`
    FOREIGN KEY (`playlists_id`)
    REFERENCES `youtube`.`playlists` (`id_playlists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlists_videos_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id_videos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`canal` (
  `id_canal` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(200) NULL,
  `fecha.creacion` DATE NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id_canal`),
  INDEX `fk_canal_usuarios1_idx` (`usuarios_id` ASC) ,
  CONSTRAINT `fk_canal_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`usuario_susbribe_canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`usuario_susbribe_canal` (
  `usuarios_id` INT NOT NULL,
  `canal_id` INT NOT NULL,
  PRIMARY KEY (`usuarios_id`, `canal_id`),
  INDEX `fk_usuario_susbribe_canal_canal1_idx` (`canal_id` ASC) ,
  CONSTRAINT `fk_usuario_susbribe_canal_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_susbribe_canal_canal1`
    FOREIGN KEY (`canal_id`)
    REFERENCES `youtube`.`canal` (`id_canal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`comentarios` (
  `id_comentarios` INT NOT NULL AUTO_INCREMENT,
  `texto` VARCHAR(500) NULL,
  `fecha_hora_coment` DATETIME NULL,
  `usuarios_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`id_comentarios`),
  INDEX `fk_comentarios_usuarios1_idx` (`usuarios_id` ASC) ,
  INDEX `fk_comentarios_videos1_idx` (`videos_id` ASC) ,
  CONSTRAINT `fk_comentarios_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id_videos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`like` (
  `id_like` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL,
  `usuarios_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`id_like`),
  INDEX `fk_like_usuarios1_idx` (`usuarios_id` ASC) ,
  INDEX `fk_like_videos1_idx` (`videos_id` ASC) ,
  CONSTRAINT `fk_like_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id_videos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`dislike`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`dislike` (
  `id_dislike` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL,
  `usuarios_id` INT NOT NULL,
  `videos_id` INT NOT NULL,
  PRIMARY KEY (`id_dislike`),
  INDEX `fk_dislike_usuarios1_idx` (`usuarios_id` ASC) ,
  INDEX `fk_dislike_videos1_idx` (`videos_id` ASC) ,
  CONSTRAINT `fk_dislike_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dislike_videos1`
    FOREIGN KEY (`videos_id`)
    REFERENCES `youtube`.`videos` (`id_videos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`like_coment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`like_coment` (
  `id_like_coment` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL,
  `comentarios_id` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  PRIMARY KEY (`id_like_coment`),
  INDEX `fk_like_coment_comentarios1_idx` (`comentarios_id` ASC) ,
  INDEX `fk_like_coment_usuarios1_idx` (`usuarios_id` ASC) ,
  CONSTRAINT `fk_like_coment_comentarios1`
    FOREIGN KEY (`comentarios_id`)
    REFERENCES `youtube`.`comentarios` (`id_comentarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_coment_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`dislike_coment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`dislike_coment` (
  `id_dislike_coment` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NULL,
  `comentarios_id` INT NOT NULL,
  `usuarios_id_usuarios` INT NOT NULL,
  PRIMARY KEY (`id_dislike_coment`),
  INDEX `fk_dislike_coment_comentarios1_idx` (`comentarios_id` ASC) ,
  INDEX `fk_dislike_coment_usuarios1_idx` (`usuarios_id_usuarios` ASC) ,
  CONSTRAINT `fk_dislike_coment_comentarios1`
    FOREIGN KEY (`comentarios_id`)
    REFERENCES `youtube`.`comentarios` (`id_comentarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_dislike_coment_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios`)
    REFERENCES `youtube`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
